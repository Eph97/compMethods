problem 2.a)
running over epsilon in array of values:
[0.1, 0.01, 0.001, 0.0001, 1.0e-5, 1.0e-6, 1.0e-7, 1.0e-8, 1.0e-9, 1.0e-10]
the computed derivatives are: 
[-0.18469473745896947, -0.19617827517009653, -0.19741778986862948, -0.1975427307354671, -0.19755523480805925, -0.1975564853188653, -0.1975566103299779, -0.1975566303139923, -0.19755671173034745, -0.19755678574521576]
The Actual Derivative is: -0.19755662425340287
The most accurate value is found at epsilon 1.0e-8


2.b)
Runing Twosided Derivative Now
the computed derivatives are: 
[-0.19868621358393806, -0.1975678351276174, -0.19755673635372487, -0.19755662537423999, -0.1975566242632768, -0.1975566242447731, -0.19755662439280286, -0.19755662291250548, -0.19755663771547913, -0.19755678574521576]

The Actual Derivative is: -0.19755662425340287
The most accurate value is found at epsilon 1.0e-6


2.c)
 most accurate of all 20
The most accurate approximate derivative of all of the ones computed in parts a and b is -0.1975566242447731 and is found with epislon value 1.0e-6 from the twosided derivative method.

problem 3:
3.a)
x is 2.9334108887039867 and the iteration number is 4
p is 2.933063120541556 and the iteration number is 29
   1     2.50000000     2.50000000     0.11597458     2.50000000
   2     2.50000000     3.75000000     3.75000000    -0.18832475     1.25000000
   3     2.50000000     3.12500000     3.12500000    -0.04683794     0.62500000
   4     2.81250000     3.12500000     2.81250000     0.03077080     0.31250000
   5     2.81250000     2.96875000     2.96875000    -0.00880498     0.15625000
   6     2.89062500     2.96875000     2.89062500     0.01077077     0.07812500
   7     2.92968750     2.96875000     2.92968750     0.00093243     0.03906250
   8     2.92968750     2.94921875     2.94921875    -0.00394858     0.01953125
   9     2.92968750     2.93945313     2.93945313    -0.00151119     0.00976563
  10     2.92968750     2.93457031     2.93457031    -0.00029016     0.00488281
  11     2.93212891     2.93457031     2.93212891     0.00032094     0.00244141
  12     2.93334961     2.93457031     2.93334961     0.00001534     0.00122070
  13     2.93334961     2.93395996     2.93395996    -0.00013743     0.00061035
  14     2.93334961     2.93365479     2.93365479    -0.00006105     0.00030518
  15     2.93334961     2.93350220     2.93350220    -0.00002286     0.00015259
  16     2.93334961     2.93342590     2.93342590    -0.00000376     0.00007629
  17     2.93338776     2.93342590     2.93338776     0.00000579     0.00003815
  18     2.93340683     2.93342590     2.93340683     0.00000102     0.00001907
  19     2.93340683     2.93341637     2.93341637    -0.00000137     0.00000954
  20     2.93340683     2.93341160     2.93341160    -0.00000018     0.00000477
  21     2.93340921     2.93341160     2.93340921     0.00000042     0.00000238
  22     2.93341041     2.93341160     2.93341041     0.00000012     0.00000119
  23     2.93341041     2.93341100     2.93341100    -0.00000003     0.00000060
root is 2.9334107041358948 found after 23 iterations

========increasing b by 10%================= 
After increasing demand by 10%, we get


   1     2.50000000     2.50000000     0.15597458     2.50000000
   2     2.50000000     3.75000000     3.75000000    -0.16165808     1.25000000
   3     2.50000000     3.12500000     3.12500000    -0.01483794     0.62500000
   4     2.81250000     3.12500000     2.81250000     0.06632635     0.31250000
   5     2.96875000     3.12500000     2.96875000     0.02487923     0.15625000
   6     3.04687500     3.12500000     3.04687500     0.00482452     0.07812500
   7     3.04687500     3.08593750     3.08593750    -0.00505345     0.03906250
   8     3.04687500     3.06640625     3.06640625    -0.00012643     0.01953125
   9     3.05664063     3.06640625     3.05664063     0.00234602     0.00976563
  10     3.06152344     3.06640625     3.06152344     0.00110904     0.00488281
  11     3.06396484     3.06640625     3.06396484     0.00049112     0.00244141
  12     3.06518555     3.06640625     3.06518555     0.00018230     0.00122070
  13     3.06579590     3.06640625     3.06579590     0.00002792     0.00061035
  14     3.06579590     3.06610107     3.06610107    -0.00004925     0.00030518
  15     3.06579590     3.06594849     3.06594849    -0.00001067     0.00015259
  16     3.06587219     3.06594849     3.06587219     0.00000863     0.00007629
  17     3.06587219     3.06591034     3.06591034    -0.00000102     0.00003815
  18     3.06589127     3.06591034     3.06589127     0.00000380     0.00001907
  19     3.06590080     3.06591034     3.06590080     0.00000139     0.00000954
  20     3.06590557     3.06591034     3.06590557     0.00000019     0.00000477
  21     3.06590557     3.06590796     3.06590796    -0.00000042     0.00000238
  22     3.06590557     3.06590676     3.06590676    -0.00000011     0.00000119
  23     3.06590617     3.06590676     3.06590617     0.00000004     0.00000060
root is 3.0659064650535583 found after 23 iterations

It still only takes 23 iterations but the root is a slightly larger value (by about 5%). This also makes sense because we're shifting demand up.

3.b)
Using the secant method now

root is 2.9334108887039867 and the iteration number is 4

========increasing b by 10%================= 

Increasing demand by 10%, using the secant method, we get
x is 3.0659063080001303 and the iteration number is 4


This is very close to the results obtained in part 3.a)


3.c)
Using successesive Iteration Method

p is 2.933063120541556 and the iteration number is 29

======== increasing b by 10%================= 

After increasing demand by 10% we get
p is 3.0655781410408296 and the iteration number is 29


These values are again quite close to the results obtained in the previous sections

3.d) 

bisection:

   1     2.50000000     2.50000000     0.11597458     2.50000000
   2     2.50000000     3.75000000     3.75000000    -0.18832475     1.25000000
   3     2.50000000     3.12500000     3.12500000    -0.04683794     0.62500000
   4     2.81250000     3.12500000     2.81250000     0.03077080     0.31250000
   5     2.81250000     2.96875000     2.96875000    -0.00880498     0.15625000
   6     2.89062500     2.96875000     2.89062500     0.01077077     0.07812500
   7     2.92968750     2.96875000     2.92968750     0.00093243     0.03906250
   8     2.92968750     2.94921875     2.94921875    -0.00394858     0.01953125
   9     2.92968750     2.93945313     2.93945313    -0.00151119     0.00976563
  10     2.92968750     2.93457031     2.93457031    -0.00029016     0.00488281
  11     2.93212891     2.93457031     2.93212891     0.00032094     0.00244141
  12     2.93334961     2.93457031     2.93334961     0.00001534     0.00122070
  13     2.93334961     2.93395996     2.93395996    -0.00013743     0.00061035
  14     2.93334961     2.93365479     2.93365479    -0.00006105     0.00030518
  15     2.93334961     2.93350220     2.93350220    -0.00002286     0.00015259
  16     2.93334961     2.93342590     2.93342590    -0.00000376     0.00007629
root is 2.9333877563476562 found after 16 iterations
secant:
P is 2.9334108887039867 and the iteration number is 4

Successive Iteration:
p is 2.933063120541556 and the iteration number is 29

======== increasing b by 10%================= (running again just to see trends)
bisection:
   1     2.50000000     2.50000000     0.15597458     2.50000000
   2     2.50000000     3.75000000     3.75000000    -0.16165808     1.25000000
   3     2.50000000     3.12500000     3.12500000    -0.01483794     0.62500000
   4     2.81250000     3.12500000     2.81250000     0.06632635     0.31250000
   5     2.96875000     3.12500000     2.96875000     0.02487923     0.15625000
   6     3.04687500     3.12500000     3.04687500     0.00482452     0.07812500
   7     3.04687500     3.08593750     3.08593750    -0.00505345     0.03906250
   8     3.04687500     3.06640625     3.06640625    -0.00012643     0.01953125
   9     3.05664063     3.06640625     3.05664063     0.00234602     0.00976563
  10     3.06152344     3.06640625     3.06152344     0.00110904     0.00488281
  11     3.06396484     3.06640625     3.06396484     0.00049112     0.00244141
  12     3.06518555     3.06640625     3.06518555     0.00018230     0.00122070
  13     3.06579590     3.06640625     3.06579590     0.00002792     0.00061035
  14     3.06579590     3.06610107     3.06610107    -0.00004925     0.00030518
  15     3.06579590     3.06594849     3.06594849    -0.00001067     0.00015259
  16     3.06587219     3.06594849     3.06587219     0.00000863     0.00007629
root is 3.0659103393554688 found after 16 iterations

secant:
p is 3.0659063080001303 and the iteration number is 4

Successive Iteration:
p is 3.0655781410408296 and the iteration number is 29


With all set to a tolerance of 1.0e-4 for convergence, we can see that secant converges by far the fastest. But this is also what we expected.
Bisection comes in second and successive iteration takes the longest. #Note, that in 3a) we were using a different default tolerance value than we do for 3d).